@using ProjectDATN.Web.ViewComponents
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;
@using X.PagedList;
@model IPagedList<ProjectDATN.Data.ViewModels.ProductVM>
@{
    ViewData["Title"] = "GetProductByCateID";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="section">
	<!-- container -->
	<div class="container">
		<!-- row -->
		<div class="row">
			<!-- ASIDE -->
			<div id="aside" class="col-md-3">
				<!-- aside Widget -->
				<div class="aside">
					<h3 class="aside-title">Categories</h3>
					<div class="checkbox-filter">

						@await Component.InvokeAsync(typeof(ViewCategoryAndBrandViewComponent),new{name="Category"})
					</div>
				</div>
				
				<div class="aside">
					<h3 class="aside-title">Brand</h3>
					<div class="checkbox-filter">
						@await Component.InvokeAsync(typeof(BrandViewComponent),new{name="Brand"})
						
					</div>
				</div>
				
			</div>
			
				<div class="row">
					<!-- product -->
				@foreach(var item in Model)
				{
					<div class="col-md-4 col-xs-6" style="margin-bottom:20px;width:290px">
						<div class="product">
							<div class="product-img" style="display:flex">
								<img src="~/uploads/images/product/@item.Image" alt="" style="height:250px;width:260px;text-align:center">

							</div>
							<div class="product-body">
								@*<p class="product-category">@item.CateName</p>*@
								<h3 class="product-name"><a href="#">@item.ProName</a></h3>
								<h4 class="product-price">@item.PerchasePrice.ToString("#,##0") VND </h4>

								<div class="product-btns">
									
									<a class="quick-view" asp-action="Details" asp-controller="Product" asp-route-id="@item.Id"><i class="fa fa-eye"></i><span class="tooltipp">Chi tiết</span></a>
								</div>
							</div>
							<div class="add-to-cart">
								<button class="add-to-cart-btn" data-id="@item.Id"><i class="fa fa-shopping-cart"></i> Thêm giỏ hàng</button>
							</div>
						</div>
					</div>
				}
				<!-- /product -->
					
				</div>
				<!-- /store products -->
				<!-- store bottom filter -->
			<div class="store-filter clearfix" style="margin:50px 200px">
				@Html.PagedListPager(Model, page=> Url.Action("GetProductByCateId",new{page}),
				new PagedListRenderOptions{
				LiElementClasses = new string[] { "page-item" },
				PageClasses = new string[] { "page-link" }
				})
			</div>
				<!-- /store bottom filter -->
			</div>
			<!-- /STORE -->
		</div>
		<!-- /row -->
	</div>
	<!-- /container -->
</div>
<!-- /SECTION -->
